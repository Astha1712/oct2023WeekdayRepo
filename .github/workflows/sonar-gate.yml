name: CI/CD workflow for Maven Build, SonarCloud Code Scan, and Quality Gate Check

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Print Working Directory
      run: pwd

    - name: List Files
      run: ls -la

    # Step 2: Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    # Step 3: Build with Maven
    - name: Build with Maven
      run: mvn install -f MyWebApp/pom.xml

    # Step 4: SonarCloud Scan
    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=oct2023WeekdayRepo \
          -Dsonar.organization=astha1712 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN

    # Step 5: Quality Gate Check
    - name: SonarCloud Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io

    # Step 6: Display Quality Gate Status
    - name: Display SonarCloud Quality Gate Status
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
# name: CI/CD workflow for Maven Build, Sonar Code scan, and Quality Gate Check
   
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     # Step 1: Checkout code
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Print Working Directory
#       run: pwd
#     - name: List Files
#       run: ls -la

#     # Step 2: Set up JDK 11
#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         distribution: 'adopt'
#         java-version: '11'

#     # Step 3: Build with Maven
#     - name: Build with Maven
#       run: mvn install -f MyWebApp/pom.xml

#     - name: SonarQube Scan
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#       run: |
#         sonar-scanner \
#           -Dsonar.projectKey=Astha1712_oct2023WeekdayRepo_AZOLDqefJyYznrUSK5v1 \
#           -Dsonar.sources=. \
#           -Dsonar.host.url=$SONAR_HOST_URL \
#           -Dsonar.login=$SONAR_TOKEN

#     # Step 6: Check the Quality Gate status
#     - name: SonarQube Quality Gate Check
#       id: sonarqube-quality-gate-check
#       uses: sonarsource/sonarqube-quality-gate-action@master
#       timeout-minutes: 5
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#     # Step 7: Display Quality Gate Status
#     - name: Display SonarQube Quality Gate Status
#       run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
